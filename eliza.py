# Summary:
# Code by Adwiteeya Rupantee Paul (Arp), Date: 04/13/2025
#What the program does: (function, input, output, description)
# =====================================================================================
# Function:     eliza
#
# Input:        userInput (a string with a phrase in the Spanish language)
# Output:       reply (a string with a response, in Spanish, generated by the function)
# Description:  The function uses regular expressions to read input from the user
#               and produce a response using natural language (Spanish).
# =====================================================================================

#After the function, there is a while loop that helps keep the function running by taking input from the user and generating replies.

#Import libraries for string handling (string) and regular expressions (re)

import string
import re

def eliza(userInput):
    # We create the variable output, which will contain our response
    output = ""

    # We create the regular expressions
    # I tested the regular expressions on https://regex101.com/

    reHello1 = r"([Yy]o)*([Mm]i nombre es|[Mm]e llamo) ([^.]*)[\.]*(.*)"
    reState1 = r"([Yy]o)*(.*)([Ee]stoy)[^.]*?( \b[^ ]*\b)[\.][\.]*(.*)"
    reMood1 = r"([Yy]o)*(.*)[Ss]oy([^.]*)[\.]*(.*)"
    reFamily1 = r"(.*)([Mm]ama|[Pp]apa)([^.]*)[\.]*(.*)"
    reModal1 = r"(.*?)([Qq]uiero|[Dd]ebo|[Pp]uedo|[Nn]o puedo|[Nn]o quiero|[Nn]o debo)(.*)(ar|ir|er)(me)?([^.]*)[\.]*(.*)"
    reThoughts1 = r"(.*)([Pp]ienso|[Ee]spero)([^.]*)[\.]*(.*)"
    reAlways1 = r"(.*)[Ss]iempre(.*)([^.]*)[\.]*(.*)"
    reInsult1 = r"(.*)([Ee]stupida|[Ii]diota)([^.]*)[\.]*(.*)"


    groupHello1 = re.search(reHello1, userInput, re.IGNORECASE)
    groupState1 = re.search(reState1, userInput, re.IGNORECASE)
    groupMood1 = re.search(reMood1, userInput, re.IGNORECASE)
    groupFamily1 = re.search(reFamily1, userInput, re.IGNORECASE)
    groupModal1 = re.search(reModal1, userInput, re.IGNORECASE)
    groupThoughts1 = re.search(reThoughts1, userInput, re.IGNORECASE)
    groupAlways1 = re.search(reAlways1, userInput, re.IGNORECASE)
    groupInsult1 = re.search(reInsult1, userInput, re.IGNORECASE)

    # if the input matches the regular expression:
    # if (re.compile(reHello1).match(input)):

    if (groupHello1 != None):
        # Then search for the first capturing group and extract it.
        # Then, use it to construct the string "Hello, CAPTUREGROUP1!"
        # and put it in the output variable.
        output = "Hola " + groupHello1.group(3) + ". Como estas?"

    # If the input doesn't match the first regular expression, then
    # keep trying to match it to the other regular expressions we have.


    elif (groupState1 !=None):
        output = "Porque" + groupState1.group(2) + "estas" + groupState1.group(4) + "?"
    elif (groupMood1 != None):
        output = "Porque" + groupMood1.group(2) + "eres" + groupMood1.group(3) + "?"
    elif (groupFamily1 !=None):
        output = "Cuéntame más de tu " +groupFamily1.group(2) +"."
    elif (groupModal1 != None):
        if (groupModal1.group(5) == "me"):
            if (groupModal1.group(2) == "Quiero") | (groupModal1.group(2) == "quiero"):
                output = "Porque quieres" + groupModal1.group(3) + groupModal1.group(4) + "te" + groupModal1.group(6) + "?"
            elif (groupModal1.group(2) == "No quiero") | (groupModal1.group(2) == "no quiero"):
                output = "Porque no quieres" + groupModal1.group(3) + groupModal1.group(4) + "te" + groupModal1.group(6) + "?"
            elif (groupModal1.group(2) == "Debo") | (groupModal1.group(2) == "debo"):
                output = "Porque debes"+ groupModal1.group(3) + groupModal1.group(4) + "te" + groupModal1.group(6) + "?"
            elif (groupModal1.group(2) == "No debo") | (groupModal1.group(2) == "no debo"):
                output = "Porque no debes"+ groupModal1.group(3) + groupModal1.group(4) + "te" + groupModal1.group(6) + "?"
            elif (groupModal1.group(2) == "Puedo") | (groupModal1.group(2) == "puedo"):
                output = "Porque puedes"+ groupModal1.group(3) + groupModal1.group(4) + "te" + groupModal1.group(6) + "?"
            else:
                output = "Porque no puedes" + groupModal1.group(3) + groupModal1.group(4) + "te" + groupModal1.group(6) +"?"
        else:
            if (groupModal1.group(2) == "Quiero") | (groupModal1.group(2) == "quiero"):
                output = "Porque quieres" + groupModal1.group(3) + groupModal1.group(4) + groupModal1.group(6) + "?"
            elif (groupModal1.group(2) == "No quiero") | (groupModal1.group(2) == "no quiero"):
                output = "Porque no quieres" + groupModal1.group(3) + groupModal1.group(4) + groupModal1.group(6) + "?"
            elif (groupModal1.group(2) == "Debo") | (groupModal1.group(2) == "debo"):
                output = "Porque debes"+ groupModal1.group(3) + groupModal1.group(4) + groupModal1.group(6) + "?"
            elif (groupModal1.group(2) == "No debo") | (groupModal1.group(2) == "no debo"):
                output = "Porque no debes"+ groupModal1.group(3) + groupModal1.group(4) + groupModal1.group(6) + "?"
            elif (groupModal1.group(2) == "Puedo") | (groupModal1.group(2) == "puedo"):
                output = "Porque puedes"+ groupModal1.group(3) + groupModal1.group(4) + groupModal1.group(6) + "?"
            else:
                output = "Porque no puedes" + groupModal1.group(3) + groupModal1.group(4)  + groupModal1.group(6) +"?"

    elif (groupThoughts1 !=None):
        if (groupThoughts1.group(1) == "Pienso") | (groupThoughts1.group(2) == "pienso"):
            output = "Porque piensas eso?"
        else:
            output = "Porque esperas eso?"
    elif (groupAlways1 !=None):
        output = "Puedes dorme un ejemplo especifico?"
    elif (groupInsult1 !=None):
        output = "Hey, sin insultos! Calmate y cuentame mas."


    # If the input does not match any of the regular expressions,
    # then say "tell me more".
    else:
        output = "Cuentame mas."

    return output

# Request input from user and then print output

i = 0
while (i == 0):
    userString = input("USER:     ")
    output = eliza(userString)
    print("COMPUTER: " + output)





